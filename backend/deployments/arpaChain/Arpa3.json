{
  "address": "0x77FDb23657C2Ebc9Bc7C93295Aac26Cb13Bc8B09",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "AddPrivilege",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_firstname",
          "type": "string"
        }
      ],
      "name": "AddProfil",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_indexp",
          "type": "uint256"
        }
      ],
      "name": "BuyToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_session",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_adresse",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_nbVote",
          "type": "uint256"
        }
      ],
      "name": "GetWinnerSession",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "GetWinnerToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_session",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_adresse",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "motivation",
          "type": "string"
        }
      ],
      "name": "HistoricVote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addPrivilege",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_idp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addPrivilegePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amountpriv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approveArpacoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arpa3Token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_indexp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "buyPrivilege",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "deleteUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getArpaTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceSC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyBalanceDep",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "winnerAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "privilegeID",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "descprivi",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamprivi",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountprivi",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "consoprivi",
              "type": "bool"
            }
          ],
          "internalType": "struct Arpa3.Orders[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrivilege",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "idP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "addressuser",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "internalType": "struct Arpa3.Privilege[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addresse",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "firstname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "service",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "nbvote",
              "type": "uint256"
            }
          ],
          "internalType": "struct Arpa3.Proposal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWinner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addresse",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "firstname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "service",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "nbvote",
              "type": "uint256"
            }
          ],
          "internalType": "struct Arpa3.Proposal",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAccountExist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_idp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "moderatePrivilege",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "number",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ordersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "privilegeID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "descprivi",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamprivi",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountprivi",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "consoprivi",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "addresse",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "firstname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "service",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "nbvote",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setAmountPrivilege",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "setConsoOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMinimumVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_firstname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_service",
          "type": "string"
        }
      ],
      "name": "setProfilAndProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setRewardAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_motivation",
          "type": "string"
        }
      ],
      "name": "setVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Arpa3.WorkflowStatus",
          "name": "_step",
          "type": "uint8"
        }
      ],
      "name": "setWorkflowstatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startVoteSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopVoteSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "firstname",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "nbVotePrivilege",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasvoted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingSessionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workflowstatus",
      "outputs": [
        {
          "internalType": "enum Arpa3.WorkflowStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc699ca13884aa681f2f40147758c8ec60c35561ab2b84201e2854b5c48329b99",
  "receipt": {
    "to": null,
    "from": "0x56f7666571A0F1abD1A8D19C4cd6Fc1b263BeBc2",
    "contractAddress": "0x77FDb23657C2Ebc9Bc7C93295Aac26Cb13Bc8B09",
    "transactionIndex": 0,
    "gasUsed": "5824293",
    "logsBloom": "0x
    "blockHash": "0x956620336bd87bed082a7a872b25f077ca186160e2b853d166e7ab7de5c20de3",
    "transactionHash": "0xc699ca13884aa681f2f40147758c8ec60c35561ab2b84201e2854b5c48329b99",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 127165,
        "transactionHash": "0xc699ca13884aa681f2f40147758c8ec60c35561ab2b84201e2854b5c48329b99",
        "address": "0x77FDb23657C2Ebc9Bc7C93295Aac26Cb13Bc8B09",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000056f7666571a0f1abd1a8d19c4cd6fc1b263bebc2"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x956620336bd87bed082a7a872b25f077ca186160e2b853d166e7ab7de5c20de3"
      }
    ],
    "blockNumber": 127165,
    "cumulativeGasUsed": "5824293",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5003B2b57Be915a6815199916dd18D67d0a13a4F"
  ],
  "numDeployments": 1,
  "solcInputHash": "ffcf81a48b9822af6ef53dbc1834fba7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"AddPrivilege\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_firstname\",\"type\":\"string\"}],\"name\":\"AddProfil\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_indexp\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_session\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_adresse\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_nbVote\",\"type\":\"uint256\"}],\"name\":\"GetWinnerSession\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"GetWinnerToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_session\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_adresse\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"motivation\",\"type\":\"string\"}],\"name\":\"HistoricVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addPrivilege\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addPrivilegePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountpriv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approveArpacoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arpa3Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_indexp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyPrivilege\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"deleteUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArpaTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceSC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyBalanceDep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privilegeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"descprivi\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamprivi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountprivi\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"consoprivi\",\"type\":\"bool\"}],\"internalType\":\"struct Arpa3.Orders[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrivilege\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"idP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addressuser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct Arpa3.Privilege[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addresse\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"firstname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"service\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"nbvote\",\"type\":\"uint256\"}],\"internalType\":\"struct Arpa3.Proposal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addresse\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"firstname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"service\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"nbvote\",\"type\":\"uint256\"}],\"internalType\":\"struct Arpa3.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAccountExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"moderatePrivilege\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ordersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privilegeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"descprivi\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamprivi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountprivi\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"consoprivi\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addresse\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"firstname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"service\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"nbvote\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setAmountPrivilege\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setConsoOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinimumVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_firstname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_service\",\"type\":\"string\"}],\"name\":\"setProfilAndProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_motivation\",\"type\":\"string\"}],\"name\":\"setVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Arpa3.WorkflowStatus\",\"name\":\"_step\",\"type\":\"uint8\"}],\"name\":\"setWorkflowstatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVoteSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVoteSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"firstname\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"nbVotePrivilege\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasvoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingSessionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workflowstatus\",\"outputs\":[{\"internalType\":\"enum Arpa3.WorkflowStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPrivilegePrice(uint256,uint256)\":{\"details\":\"send Token to winner\"},\"moderatePrivilege(uint256,bool)\":{\"details\":\"if remove list privilege, refund user\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stopVoteSession()\":{\"details\":\"Reinit du compteur de vote en cours pour la session (number)MinimumVote to send token at vote session stop\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPrivilegePrice(uint256,uint256)\":{\"notice\":\"Display the winner and clean data for next session\"},\"isAccountExist(address)\":{\"notice\":\"Check if user is recorded on chain / Address and Proposal \"},\"setProfilAndProposal(string,string,string)\":{\"notice\":\"Record profil user and record proposaleach users can be proposal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Arpa3.sol\":\"Arpa3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Arpa3.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.19;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract Arpa3 is Ownable, ReentrancyGuard {\\n    \\n    IERC20 public immutable arpa3Token;\\n   \\n    enum  WorkflowStatus { UserRecording, RecordPrivilege, VoteSessionStart, VoteSessionEnd }\\n    WorkflowStatus public workflowstatus;\\n    uint public counter;\\n    uint public number = 0;\\n    uint public amountpriv = 500000000000000000;\\n    uint public minimumVote = 1;\\n    uint public votingSessionNumber;\\n    uint private winningProposalID;\\n    uint public rewardAmount = 500000000000000000;\\n\\n    struct Privilege{\\n        uint idP;\\n        uint amount;\\n        string description;\\n        address addressuser;\\n        bool isActive;\\n    }\\n\\n    Privilege[] privilegeArray;\\n    \\n    struct Proposal {\\n        address addresse;\\n        string name;\\n        string firstname;\\n        string service;\\n        uint nbvote;\\n    }\\n\\n    Proposal[] public proposalArray;\\n\\n    struct Profil {\\n        string name;\\n        string firstname;\\n        uint nbVotePrivilege;\\n        bool hasvoted;\\n        bool active;\\n    }\\n\\n    struct Orders {\\n        address winnerAddress;\\n        uint privilegeID;\\n        string descprivi;\\n        uint timestamprivi;\\n        uint amountprivi;\\n        bool consoprivi;\\n    }\\n\\n    Orders[] public ordersArray;\\n\\n    mapping(address => Profil) public users;\\n    mapping(address=>uint) balances;\\n\\n    event AddProfil(address _address, string _name, string _firstname);\\n    event AddPrivilege(address _address, string _description);\\n    event GetWinnerSession(uint _session, address _adresse, uint _nbVote);\\n    event HistoricVote(uint _session, address _adresse, string motivation);\\n    event GetWinnerToken(address _address, uint _amount);\\n    event BuyToken(address _address, uint _amount, uint _indexp);\\n\\n    constructor(address _rewardToken) {\\n        arpa3Token = IERC20(_rewardToken);\\n    }\\n\\n    function addPrivilege(string calldata _description) external payable nonReentrant{\\n        require(users[msg.sender].active == true,\\\"User not recorded\\\");\\n        require(msg.value == amountpriv, \\\"Incorrect amount\\\");\\n        \\n        Privilege memory privilege;\\n        privilege.idP = counter;\\n        privilege.amount = msg.value;\\n        privilege.description = _description;\\n        privilege.addressuser = msg.sender;\\n        privilege.isActive = true;\\n        privilegeArray.push(privilege);\\n\\n        balances[msg.sender] += msg.value;\\n        ++counter;\\n        emit AddPrivilege(msg.sender, _description);\\n    }\\n\\n    function getPrivilege() external view returns(Privilege[] memory){\\n        return privilegeArray;\\n    }\\n\\n    function buyPrivilege(uint _indexp,uint _amount) external {\\n        require(_amount > 0, \\\"Not correct price\\\");\\n        require(arpa3Token.balanceOf(msg.sender) >= _amount,\\\"Not enought funds to buy this privilege\\\");\\n        require(privilegeArray[_indexp].amount == _amount,\\\"Petit malin va ...\\\");\\n\\n        require(arpa3Token.transferFrom(msg.sender,address(this), _amount),\\\"Transfer erreur\\\");\\n\\n        Orders memory orders;\\n        orders.winnerAddress = msg.sender;\\n        orders.privilegeID = _indexp;\\n        orders.descprivi = privilegeArray[_indexp].description;\\n        orders.timestamprivi = block.timestamp;\\n        orders.amountprivi = _amount;\\n        orders.consoprivi = false;\\n        ordersArray.push(orders);\\n        emit BuyToken(msg.sender, _amount, _indexp);\\n    }\\n\\n    function getOrders() external view returns(Orders[] memory){\\n        return ordersArray;\\n    }\\n\\n    function approveArpacoin(uint _amount) external {\\n        arpa3Token.approve(msg.sender, _amount* 10**18);\\n    }\\n\\n    /// @notice Check if user is recorded on chain / Address and Proposal \\n    function isAccountExist(address _address) external view returns(bool){\\n        return users[_address].active;\\n    }\\n\\n    /// @notice Record profil user and record proposal\\n    /// @notice each users can be proposal\\n    function setProfilAndProposal(string calldata _name, string calldata _firstname, string calldata _service) external {\\n        require(msg.sender != address(0), \\\"not connected\\\");\\n        require(!users[msg.sender].active, \\\"Account already Exist\\\");\\n        require( bytes(_name).length > 0 && bytes(_firstname).length > 0 && bytes(_service).length > 0, \\\"Value not empty\\\");\\n        // struct profil\\n        users[msg.sender].name = _name;\\n        users[msg.sender].firstname = _firstname;\\n        users[msg.sender].hasvoted = false;\\n        users[msg.sender].active = true;\\n\\n        // Array Proposal\\n        Proposal memory proposal;\\n        proposal.addresse = msg.sender;\\n        proposal.name = _name;\\n        proposal.firstname = _firstname;\\n        proposal.service = _service;\\n        proposal.nbvote = 0; \\n        proposalArray.push(proposal);\\n\\n        emit AddProfil(msg.sender, _name,  _firstname);\\n    }\\n\\n    function hasVoted() external view returns(bool){\\n        return users[msg.sender].hasvoted;\\n    }\\n\\n    function setVote(uint _id, string calldata _motivation) external {\\n        require(workflowstatus == WorkflowStatus.VoteSessionStart, 'Voting session havent started yet');\\n        require(!users[msg.sender].hasvoted, 'You have already voted');\\n        require(_id < proposalArray.length, 'Proposal not found'); // pas oblig\\u00e9, et pas besoin du >0 car uint\\n\\n        users[msg.sender].hasvoted = true;\\n        proposalArray[_id].nbvote++;\\n\\n        // if this vote has more votes than the winner vote\\n        if(proposalArray[_id].nbvote > proposalArray[winningProposalID].nbvote) {\\n            winningProposalID = _id;\\n        }\\n        ++number;\\n        emit HistoricVote(votingSessionNumber, proposalArray[_id].addresse, _motivation);\\n    }\\n\\n    function getWinner() external view returns(Proposal memory){\\n        require(workflowstatus == WorkflowStatus.VoteSessionEnd,\\\"Session Vote not closed\\\");\\n        return proposalArray[winningProposalID];\\n    }\\n\\n    function getProposal() external view returns(Proposal[] memory){\\n        return proposalArray;\\n    }\\n\\n    function getMyBalanceDep() external view returns(uint){\\n        return balances[msg.sender];\\n    }\\n\\n    function getMyEthBalance() external view returns(uint){\\n        return msg.sender.balance;\\n    }\\n\\n    function _sendToken(address _addresse) private nonReentrant {\\n        require(_addresse != address(0), \\\"not valid account\\\");\\n        require(proposalArray[winningProposalID].addresse == _addresse, \\\"You are not the Winner Session vote\\\");\\n        arpa3Token.transfer(_addresse, rewardAmount);\\n        emit GetWinnerToken(_addresse, rewardAmount);\\n    }\\n\\n    function getArpaTokenBalance() external view returns(uint){\\n        return arpa3Token.balanceOf(msg.sender);\\n    }\\n\\n    function getBalanceSC() external view returns(uint){\\n        return arpa3Token.balanceOf(address(this));\\n    }\\n\\n    /** Admin function to set Dapps */\\n    /// @notice Display the winner and clean data for next session\\n    /// @dev send Token to winner\\n\\n    function addPrivilegePrice(uint _idp,uint _amount) external onlyOwner{\\n        require(_amount > 0,\\\"Bad amount for privilege\\\");\\n        require(_idp >= 0,\\\"Bad privilege identifier\\\");\\n        privilegeArray[_idp].amount = _amount;\\n    }\\n\\n    ///@dev if remove list privilege, refund user\\n    function moderatePrivilege(uint _idp, bool _status) external payable onlyOwner {\\n        privilegeArray[_idp].isActive = _status;\\n        // Withdraw user\\n        require(address(this).balance >= privilegeArray[_idp].amount, \\\"Not enough cash in SmartContract\\\");\\n        (bool success, ) = privilegeArray[_idp].addressuser.call{value: privilegeArray[_idp].amount}(\\\"\\\");\\n        require(success); \\n    }\\n\\n    /// @notice TODO__\\n    /*\\n    function deletePrivilege(uint _idp) external onlyOwner{\\n        require(_idp >= 0, \\\"bad number\\\");\\n\\n    }\\n    */\\n\\n    /// @dev Reinit du compteur de vote en cours pour la session (number)\\n    /// @dev MinimumVote to send token at vote session stop\\n    function stopVoteSession() external onlyOwner{\\n        workflowstatus = WorkflowStatus.VoteSessionEnd;\\n        if( number >= minimumVote ){\\n            _sendToken(proposalArray[winningProposalID].addresse);\\n        } \\n    }\\n\\n    function setRewardAmount(uint _amount) external onlyOwner{\\n        rewardAmount = _amount;\\n    }\\n\\n    function setMinimumVote(uint _amount) external onlyOwner{\\n        minimumVote = _amount;\\n    }\\n\\n    function setWorkflowstatus(WorkflowStatus _step) external onlyOwner{\\n        workflowstatus = _step;\\n    }\\n\\n    function startVoteSession() external onlyOwner{\\n        number = 0;\\n        ++votingSessionNumber;\\n        workflowstatus = WorkflowStatus.VoteSessionStart;\\n        for (uint256 index = 0; index < proposalArray.length; ++index) {\\n            proposalArray[index].nbvote = 0;\\n            users[proposalArray[index].addresse].hasvoted = false;\\n        }\\n    }\\n\\n    function setConsoOrders(uint _index,bool _status) external onlyOwner{\\n        require(_index >= 0 , \\\"Bad settings\\\");\\n        ordersArray[_index].consoprivi = _status;\\n    }\\n\\n    function setAmountPrivilege(uint _amount) external onlyOwner{\\n        require(_amount > 0, \\\"not enough for privilege\\\");\\n        amountpriv = _amount;\\n    }\\n\\n    function withdrawal() external payable onlyOwner {\\n        require(address(this).balance > 0, \\\"No cash in SmartContract\\\");\\n        (bool success, ) = msg.sender.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n    \\n    function deleteUser(uint _id) external onlyOwner{\\n        require(_id >= 0, \\\"bad bumber\\\");\\n        delete proposalArray[_id];\\n    }\\n\\n    fallback() external payable {}\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x95b7e3ec86bb3a322083f041235d8fd5770f695cb78bbb29cb363f12d7003514\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a060405260006004556706f05b59d3b2000060055560016006556706f05b59d3b200006009553480156200003357600080fd5b506040516200563e3803806200563e8339818101604052810190620000599190620001f1565b620000796200006d620000bb60201b60201c565b620000c360201b60201c565b600180819055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000223565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b9826200018c565b9050919050565b620001cb81620001ac565b8114620001d757600080fd5b50565b600081519050620001eb81620001c0565b92915050565b6000602082840312156200020a576200020962000187565b5b60006200021a84828501620001da565b91505092915050565b6080516153d56200026960003960008181610ab4015281816113080152818161182301528181611cbe01528181612693015281816127d501526132a601526153d56000f3fe60806040526004361061023f5760003560e01c80638da5cb5b1161012e578063b47e9d40116100ab578063f2fde38b1161006f578063f2fde38b14610800578063f3b3cb6a14610829578063f5ad317514610845578063f7b2a7be1461086e578063ffdf7cb11461089957610246565b8063b47e9d4014610762578063b9e2bea014610779578063c366c56c146107a4578063c6abda3c146107cd578063d4e93292146107f657610246565b8063a87430ba116100f2578063a87430ba14610674578063a8a65a78146106b5578063a96c879e146106de578063aaa9834614610720578063b32c93561461073757610246565b80638da5cb5b1461059f5780638e7ea5b2146105ca5780639867a103146105f55780639b16959514610620578063a730bfaf1461064b57610246565b80633db42de7116101bc578063648213381161018057806364821338146104de578063715018a614610509578063771f7805146105205780637f47997e146105495780638381f58a1461057457610246565b80633db42de71461040b57806342e3cf1e1461043457806358e7a5991461045f57806361bc221a1461048a578063634c2d77146104b557610246565b80632e2dc43e116102035780632e2dc43e1461033157806338f148451461035c5780633a19825d146103855780633cfdf802146103c65780633d665f45146103e257610246565b80630709dec81461024857806314b4a4f9146102735780631dbe22be146102b05780631f21580d146102db5780632d0332841461030657610246565b3661024657005b005b34801561025457600080fd5b5061025d6108c2565b60405161026a91906134e3565b60405180910390f35b34801561027f57600080fd5b5061029a60048036038101906102959190613566565b6108e1565b6040516102a791906135ae565b60405180910390f35b3480156102bc57600080fd5b506102c561093a565b6040516102d291906137be565b60405180910390f35b3480156102e757600080fd5b506102f0610ab0565b6040516102fd91906134e3565b60405180910390f35b34801561031257600080fd5b5061031b610b51565b60405161032891906134e3565b60405180910390f35b34801561033d57600080fd5b50610346610b57565b604051610353919061392b565b60405180910390f35b34801561036857600080fd5b50610383600480360381019061037e9190613979565b610cd7565b005b34801561039157600080fd5b506103ac60048036038101906103a79190613979565b610daa565b6040516103bd9594939291906139ff565b60405180910390f35b6103e060048036038101906103db9190613acc565b610fa8565b005b3480156103ee57600080fd5b5061040960048036038101906104049190613979565b6112b1565b005b34801561041757600080fd5b50610432600480360381019061042d9190613979565b611306565b005b34801561044057600080fd5b506104496113bb565b60405161045691906134e3565b60405180910390f35b34801561046b57600080fd5b50610474611402565b6040516104819190613b90565b60405180910390f35b34801561049657600080fd5b5061049f611415565b6040516104ac91906134e3565b60405180910390f35b3480156104c157600080fd5b506104dc60048036038101906104d79190613979565b61141b565b005b3480156104ea57600080fd5b506104f361142d565b60405161050091906135ae565b60405180910390f35b34801561051557600080fd5b5061051e611484565b005b34801561052c57600080fd5b5061054760048036038101906105429190613bd7565b611498565b005b34801561055557600080fd5b5061055e611525565b60405161056b91906134e3565b60405180910390f35b34801561058057600080fd5b5061058961152b565b60405161059691906134e3565b60405180910390f35b3480156105ab57600080fd5b506105b4611531565b6040516105c19190613c17565b60405180910390f35b3480156105d657600080fd5b506105df61155a565b6040516105ec9190613cb6565b60405180910390f35b34801561060157600080fd5b5061060a611821565b6040516106179190613d37565b60405180910390f35b34801561062c57600080fd5b50610635611845565b60405161064291906134e3565b60405180910390f35b34801561065757600080fd5b50610672600480360381019061066d9190613d52565b61184b565b005b34801561068057600080fd5b5061069b60048036038101906106969190613566565b611908565b6040516106ac959493929190613d92565b60405180910390f35b3480156106c157600080fd5b506106dc60048036038101906106d79190613979565b611a68565b005b3480156106ea57600080fd5b5061070560048036038101906107009190613979565b611a7a565b60405161071796959493929190613df3565b60405180910390f35b34801561072c57600080fd5b50610735611b7b565b005b34801561074357600080fd5b5061074c611cba565b60405161075991906134e3565b60405180910390f35b34801561076e57600080fd5b50610777611d5b565b005b34801561078557600080fd5b5061078e611dec565b60405161079b9190613fa1565b60405180910390f35b3480156107b057600080fd5b506107cb60048036038101906107c69190613fc3565b612061565b005b3480156107d957600080fd5b506107f460048036038101906107ef9190614048565b61233f565b005b6107fe612374565b005b34801561080c57600080fd5b5061082760048036038101906108229190613566565b612438565b005b610843600480360381019061083e9190613bd7565b6124bb565b005b34801561085157600080fd5b5061086c60048036038101906108679190613d52565b61264d565b005b34801561087a57600080fd5b50610883612ae0565b60405161089091906134e3565b60405180910390f35b3480156108a557600080fd5b506108c060048036038101906108bb9190614075565b612ae6565b005b60003373ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160019054906101000a900460ff169050919050565b6060600a805480602002602001604051908101604052809291908181526020016000905b82821015610aa757838290600052602060002090600402016040518060a001604052908160008201548152602001600182015481526020016002820180546109a590614158565b80601f01602080910402602001604051908101604052809291908181526020018280546109d190614158565b8015610a1e5780601f106109f357610100808354040283529160200191610a1e565b820191906000526020600020905b815481529060010190602001808311610a0157829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff1615151515815250508152602001906001019061095e565b50505050905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b0b9190613c17565b602060405180830381865afa158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c919061419e565b905090565b60055481565b6060600c805480602002602001604051908101604052809291908181526020016000905b82821015610cce57838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054610c0e90614158565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3a90614158565b8015610c875780601f10610c5c57610100808354040283529160200191610c87565b820191906000526020600020905b815481529060010190602001808311610c6a57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190610b7b565b50505050905090565b610cdf612fde565b6000811015610d23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1a90614217565b60405180910390fd5b600b8181548110610d3757610d36614237565b5b9060005260206000209060050201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000610d7d9190613393565b600282016000610d8d9190613393565b600382016000610d9d9190613393565b6004820160009055505050565b600b8181548110610dba57600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610e0390614158565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2f90614158565b8015610e7c5780601f10610e5157610100808354040283529160200191610e7c565b820191906000526020600020905b815481529060010190602001808311610e5f57829003601f168201915b505050505090806002018054610e9190614158565b80601f0160208091040260200160405190810160405280929190818152602001828054610ebd90614158565b8015610f0a5780601f10610edf57610100808354040283529160200191610f0a565b820191906000526020600020905b815481529060010190602001808311610eed57829003601f168201915b505050505090806003018054610f1f90614158565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4b90614158565b8015610f985780601f10610f6d57610100808354040283529160200191610f98565b820191906000526020600020905b815481529060010190602001808311610f7b57829003601f168201915b5050505050908060040154905085565b610fb061305c565b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160019054906101000a900460ff16151514611046576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103d906142b2565b60405180910390fd5b600554341461108a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110819061431e565b60405180910390fd5b6110926133d3565b6003548160000181815250503481602001818152505082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525033816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001816080019015159081151581525050600a81908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101556040820151816002019081611193919061450f565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff021916908315150217905550505034600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461124c9190614610565b9250508190555060036000815461126290614644565b919050819055507f79b4967f952c2e2a563ed6ece6722a54e83844ba5ab08f9f5cdaaf27560125de33848460405161129c939291906146c8565b60405180910390a1506112ad6130ab565b5050565b6112b9612fde565b600081116112fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f390614746565b60405180910390fd5b8060058190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b333670de0b6b3a7640000846113579190614766565b6040518363ffffffff1660e01b81526004016113749291906147a8565b6020604051808303816000875af1158015611393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b791906147e6565b5050565b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600260009054906101000a900460ff1681565b60035481565b611423612fde565b8060068190555050565b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16905090565b61148c612fde565b61149660006130b4565b565b6114a0612fde565b60008210156114e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114db9061485f565b60405180910390fd5b80600c83815481106114f9576114f8614237565b5b906000526020600020906006020160050160006101000a81548160ff0219169083151502179055505050565b60075481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61156261341a565b60038081111561157557611574613b19565b5b600260009054906101000a900460ff16600381111561159757611596613b19565b5b146115d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ce906148cb565b60405180910390fd5b600b600854815481106115ed576115ec614237565b5b90600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461166c90614158565b80601f016020809104026020016040519081016040528092919081815260200182805461169890614158565b80156116e55780601f106116ba576101008083540402835291602001916116e5565b820191906000526020600020905b8154815290600101906020018083116116c857829003601f168201915b505050505081526020016002820180546116fe90614158565b80601f016020809104026020016040519081016040528092919081815260200182805461172a90614158565b80156117775780601f1061174c57610100808354040283529160200191611777565b820191906000526020600020905b81548152906001019060200180831161175a57829003601f168201915b5050505050815260200160038201805461179090614158565b80601f01602080910402602001604051908101604052809291908181526020018280546117bc90614158565b80156118095780601f106117de57610100808354040283529160200191611809565b820191906000526020600020905b8154815290600101906020018083116117ec57829003601f168201915b50505050508152602001600482015481525050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b611853612fde565b60008111611896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188d90614937565b60405180910390fd5b60008210156118da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d1906149a3565b60405180910390fd5b80600a83815481106118ef576118ee614237565b5b9060005260206000209060040201600101819055505050565b600d60205280600052604060002060009150905080600001805461192b90614158565b80601f016020809104026020016040519081016040528092919081815260200182805461195790614158565b80156119a45780601f10611979576101008083540402835291602001916119a4565b820191906000526020600020905b81548152906001019060200180831161198757829003601f168201915b5050505050908060010180546119b990614158565b80601f01602080910402602001604051908101604052809291908181526020018280546119e590614158565b8015611a325780601f10611a0757610100808354040283529160200191611a32565b820191906000526020600020905b815481529060010190602001808311611a1557829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b611a70612fde565b8060098190555050565b600c8181548110611a8a57600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054611ad990614158565b80601f0160208091040260200160405190810160405280929190818152602001828054611b0590614158565b8015611b525780601f10611b2757610100808354040283529160200191611b52565b820191906000526020600020905b815481529060010190602001808311611b3557829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16905086565b611b83612fde565b6000600481905550600760008154611b9a90614644565b9190508190555060028060006101000a81548160ff02191690836003811115611bc657611bc5613b19565b5b021790555060005b600b80549050811015611cb7576000600b8281548110611bf157611bf0614237565b5b9060005260206000209060050201600401819055506000600d6000600b8481548110611c2057611c1f614237565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff02191690831515021790555080611cb090614644565b9050611bce565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d159190613c17565b602060405180830381865afa158015611d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d56919061419e565b905090565b611d63612fde565b6003600260006101000a81548160ff02191690836003811115611d8957611d88613b19565b5b021790555060065460045410611dea57611de9600b60085481548110611db257611db1614237565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613178565b5b565b6060600b805480602002602001604051908101604052809291908181526020016000905b8282101561205857838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054611e9990614158565b80601f0160208091040260200160405190810160405280929190818152602001828054611ec590614158565b8015611f125780601f10611ee757610100808354040283529160200191611f12565b820191906000526020600020905b815481529060010190602001808311611ef557829003601f168201915b50505050508152602001600282018054611f2b90614158565b80601f0160208091040260200160405190810160405280929190818152602001828054611f5790614158565b8015611fa45780601f10611f7957610100808354040283529160200191611fa4565b820191906000526020600020905b815481529060010190602001808311611f8757829003601f168201915b50505050508152602001600382018054611fbd90614158565b80601f0160208091040260200160405190810160405280929190818152602001828054611fe990614158565b80156120365780601f1061200b57610100808354040283529160200191612036565b820191906000526020600020905b81548152906001019060200180831161201957829003601f168201915b5050505050815260200160048201548152505081526020019060010190611e10565b50505050905090565b6002600381111561207557612074613b19565b5b600260009054906101000a900460ff16600381111561209757612096613b19565b5b146120d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ce90614a35565b60405180910390fd5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615612167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215e90614aa1565b60405180910390fd5b600b8054905083106121ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121a590614b0d565b60405180910390fd5b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908315150217905550600b838154811061221d5761221c614237565b5b9060005260206000209060050201600401600081548092919061223f90614644565b9190505550600b6008548154811061225a57612259614237565b5b906000526020600020906005020160040154600b84815481106122805761227f614237565b5b90600052602060002090600502016004015411156122a057826008819055505b6004600081546122af90614644565b919050819055507f9a4b1974a303b6b8937c2f2186a95dc8466a1b5f12f3908d04c7e4afc0079bd9600754600b85815481106122ee576122ed614237565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684846040516123329493929190614b2d565b60405180910390a1505050565b612347612fde565b80600260006101000a81548160ff0219169083600381111561236c5761236b613b19565b5b021790555050565b61237c612fde565b600047116123bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123b690614bb9565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516123e590614c0a565b60006040518083038185875af1925050503d8060008114612422576040519150601f19603f3d011682016040523d82523d6000602084013e612427565b606091505b505090508061243557600080fd5b50565b612440612fde565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036124af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124a690614c91565b60405180910390fd5b6124b8816130b4565b50565b6124c3612fde565b80600a83815481106124d8576124d7614237565b5b906000526020600020906004020160030160146101000a81548160ff021916908315150217905550600a828154811061251457612513614237565b5b906000526020600020906004020160010154471015612568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255f90614cfd565b60405180910390fd5b6000600a838154811061257e5761257d614237565b5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600a84815481106125da576125d9614237565b5b9060005260206000209060040201600101546040516125f890614c0a565b60006040518083038185875af1925050503d8060008114612635576040519150601f19603f3d011682016040523d82523d6000602084013e61263a565b606091505b505090508061264857600080fd5b505050565b60008111612690576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161268790614d69565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016126ea9190613c17565b602060405180830381865afa158015612707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061272b919061419e565b101561276c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276390614dfb565b60405180910390fd5b80600a838154811061278157612780614237565b5b906000526020600020906004020160010154146127d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ca90614e67565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161283093929190614e87565b6020604051808303816000875af115801561284f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061287391906147e6565b6128b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128a990614f0a565b60405180910390fd5b6128ba61345f565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082816020018181525050600a83815481106129105761290f614237565b5b9060005260206000209060040201600201805461292c90614158565b80601f016020809104026020016040519081016040528092919081815260200182805461295890614158565b80156129a55780601f1061297a576101008083540402835291602001916129a5565b820191906000526020600020905b81548152906001019060200180831161298857829003601f168201915b50505050508160400181905250428160600181815250508181608001818152505060008160a0019015159081151581525050600c81908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081612a69919061450f565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555050507ff6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb338385604051612ad393929190614f2a565b60405180910390a1505050565b60095481565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603612b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4c90614fad565b60405180910390fd5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160019054906101000a900460ff1615612be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bdc90615019565b60405180910390fd5b600086869050118015612bfb5750600084849050115b8015612c0a5750600082829050115b612c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c4090615085565b60405180910390fd5b8585600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019182612c9a9291906150b0565b508383600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019182612cec9291906150b0565b506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160016101000a81548160ff021916908315150217905550612dab61341a565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816020018190525084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081606001819052506000816080018181525050600b81908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081612f5d919061450f565b506040820151816002019081612f73919061450f565b506060820151816003019081612f89919061450f565b506080820151816004015550507fdb662c8b79ccb9909891c358aec9651e782d0ad9523566bd659c084b5fefcec73388888888604051612fcd959493929190615180565b60405180910390a150505050505050565b612fe661338b565b73ffffffffffffffffffffffffffffffffffffffff16613004611531565b73ffffffffffffffffffffffffffffffffffffffff161461305a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161305190615215565b60405180910390fd5b565b6002600154036130a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161309890615281565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61318061305c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036131ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131e6906152ed565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b6008548154811061321c5761321b614237565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146132a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161329b9061537f565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb826009546040518363ffffffff1660e01b81526004016133019291906147a8565b6020604051808303816000875af1158015613320573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061334491906147e6565b507f2e06e81581e774f145d32b1feac204fb2683499d425091cb4fcfc137726008c2816009546040516133789291906147a8565b60405180910390a16133886130ab565b50565b600033905090565b50805461339f90614158565b6000825580601f106133b157506133d0565b601f0160209004906000526020600020908101906133cf91906134ad565b5b50565b6040518060a00160405280600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001600081525090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160008152602001600081526020016000151581525090565b5b808211156134c65760008160009055506001016134ae565b5090565b6000819050919050565b6134dd816134ca565b82525050565b60006020820190506134f860008301846134d4565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061353382613508565b9050919050565b61354381613528565b811461354e57600080fd5b50565b6000813590506135608161353a565b92915050565b60006020828403121561357c5761357b6134fe565b5b600061358a84828501613551565b91505092915050565b60008115159050919050565b6135a881613593565b82525050565b60006020820190506135c3600083018461359f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6135fe816134ca565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561363e578082015181840152602081019050613623565b60008484015250505050565b6000601f19601f8301169050919050565b600061366682613604565b613670818561360f565b9350613680818560208601613620565b6136898161364a565b840191505092915050565b61369d81613528565b82525050565b6136ac81613593565b82525050565b600060a0830160008301516136ca60008601826135f5565b5060208301516136dd60208601826135f5565b50604083015184820360408601526136f5828261365b565b915050606083015161370a6060860182613694565b50608083015161371d60808601826136a3565b508091505092915050565b600061373483836136b2565b905092915050565b6000602082019050919050565b6000613754826135c9565b61375e81856135d4565b935083602082028501613770856135e5565b8060005b858110156137ac578484038952815161378d8582613728565b94506137988361373c565b925060208a01995050600181019050613774565b50829750879550505050505092915050565b600060208201905081810360008301526137d88184613749565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060c0830160008301516138246000860182613694565b50602083015161383760208601826135f5565b506040830151848203604086015261384f828261365b565b915050606083015161386460608601826135f5565b50608083015161387760808601826135f5565b5060a083015161388a60a08601826136a3565b508091505092915050565b60006138a1838361380c565b905092915050565b6000602082019050919050565b60006138c1826137e0565b6138cb81856137eb565b9350836020820285016138dd856137fc565b8060005b8581101561391957848403895281516138fa8582613895565b9450613905836138a9565b925060208a019950506001810190506138e1565b50829750879550505050505092915050565b6000602082019050818103600083015261394581846138b6565b905092915050565b613956816134ca565b811461396157600080fd5b50565b6000813590506139738161394d565b92915050565b60006020828403121561398f5761398e6134fe565b5b600061399d84828501613964565b91505092915050565b6139af81613528565b82525050565b600082825260208201905092915050565b60006139d182613604565b6139db81856139b5565b93506139eb818560208601613620565b6139f48161364a565b840191505092915050565b600060a082019050613a1460008301886139a6565b8181036020830152613a2681876139c6565b90508181036040830152613a3a81866139c6565b90508181036060830152613a4e81856139c6565b9050613a5d60808301846134d4565b9695505050505050565b600080fd5b600080fd5b600080fd5b60008083601f840112613a8c57613a8b613a67565b5b8235905067ffffffffffffffff811115613aa957613aa8613a6c565b5b602083019150836001820283011115613ac557613ac4613a71565b5b9250929050565b60008060208385031215613ae357613ae26134fe565b5b600083013567ffffffffffffffff811115613b0157613b00613503565b5b613b0d85828601613a76565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110613b5957613b58613b19565b5b50565b6000819050613b6a82613b48565b919050565b6000613b7a82613b5c565b9050919050565b613b8a81613b6f565b82525050565b6000602082019050613ba56000830184613b81565b92915050565b613bb481613593565b8114613bbf57600080fd5b50565b600081359050613bd181613bab565b92915050565b60008060408385031215613bee57613bed6134fe565b5b6000613bfc85828601613964565b9250506020613c0d85828601613bc2565b9150509250929050565b6000602082019050613c2c60008301846139a6565b92915050565b600060a083016000830151613c4a6000860182613694565b5060208301518482036020860152613c62828261365b565b91505060408301518482036040860152613c7c828261365b565b91505060608301518482036060860152613c96828261365b565b9150506080830151613cab60808601826135f5565b508091505092915050565b60006020820190508181036000830152613cd08184613c32565b905092915050565b6000819050919050565b6000613cfd613cf8613cf384613508565b613cd8565b613508565b9050919050565b6000613d0f82613ce2565b9050919050565b6000613d2182613d04565b9050919050565b613d3181613d16565b82525050565b6000602082019050613d4c6000830184613d28565b92915050565b60008060408385031215613d6957613d686134fe565b5b6000613d7785828601613964565b9250506020613d8885828601613964565b9150509250929050565b600060a0820190508181036000830152613dac81886139c6565b90508181036020830152613dc081876139c6565b9050613dcf60408301866134d4565b613ddc606083018561359f565b613de9608083018461359f565b9695505050505050565b600060c082019050613e0860008301896139a6565b613e1560208301886134d4565b8181036040830152613e2781876139c6565b9050613e3660608301866134d4565b613e4360808301856134d4565b613e5060a083018461359f565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060a083016000830151613e9f6000860182613694565b5060208301518482036020860152613eb7828261365b565b91505060408301518482036040860152613ed1828261365b565b91505060608301518482036060860152613eeb828261365b565b9150506080830151613f0060808601826135f5565b508091505092915050565b6000613f178383613e87565b905092915050565b6000602082019050919050565b6000613f3782613e5b565b613f418185613e66565b935083602082028501613f5385613e77565b8060005b85811015613f8f5784840389528151613f708582613f0b565b9450613f7b83613f1f565b925060208a01995050600181019050613f57565b50829750879550505050505092915050565b60006020820190508181036000830152613fbb8184613f2c565b905092915050565b600080600060408486031215613fdc57613fdb6134fe565b5b6000613fea86828701613964565b935050602084013567ffffffffffffffff81111561400b5761400a613503565b5b61401786828701613a76565b92509250509250925092565b6004811061403057600080fd5b50565b60008135905061404281614023565b92915050565b60006020828403121561405e5761405d6134fe565b5b600061406c84828501614033565b91505092915050565b60008060008060008060608789031215614092576140916134fe565b5b600087013567ffffffffffffffff8111156140b0576140af613503565b5b6140bc89828a01613a76565b9650965050602087013567ffffffffffffffff8111156140df576140de613503565b5b6140eb89828a01613a76565b9450945050604087013567ffffffffffffffff81111561410e5761410d613503565b5b61411a89828a01613a76565b92509250509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061417057607f821691505b60208210810361418357614182614129565b5b50919050565b6000815190506141988161394d565b92915050565b6000602082840312156141b4576141b36134fe565b5b60006141c284828501614189565b91505092915050565b7f6261642062756d62657200000000000000000000000000000000000000000000600082015250565b6000614201600a836139b5565b915061420c826141cb565b602082019050919050565b60006020820190508181036000830152614230816141f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f55736572206e6f74207265636f72646564000000000000000000000000000000600082015250565b600061429c6011836139b5565b91506142a782614266565b602082019050919050565b600060208201905081810360008301526142cb8161428f565b9050919050565b7f496e636f727265637420616d6f756e7400000000000000000000000000000000600082015250565b60006143086010836139b5565b9150614313826142d2565b602082019050919050565b60006020820190508181036000830152614337816142fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026143cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614392565b6143d98683614392565b95508019841693508086168417925050509392505050565b600061440c614407614402846134ca565b613cd8565b6134ca565b9050919050565b6000819050919050565b614426836143f1565b61443a61443282614413565b84845461439f565b825550505050565b600090565b61444f614442565b61445a81848461441d565b505050565b5b8181101561447e57614473600082614447565b600181019050614460565b5050565b601f8211156144c3576144948161436d565b61449d84614382565b810160208510156144ac578190505b6144c06144b885614382565b83018261445f565b50505b505050565b600082821c905092915050565b60006144e6600019846008026144c8565b1980831691505092915050565b60006144ff83836144d5565b9150826002028217905092915050565b61451882613604565b67ffffffffffffffff8111156145315761453061433e565b5b61453b8254614158565b614546828285614482565b600060209050601f8311600181146145795760008415614567578287015190505b61457185826144f3565b8655506145d9565b601f1984166145878661436d565b60005b828110156145af5784890151825560018201915060208501945060208101905061458a565b868310156145cc57848901516145c8601f8916826144d5565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061461b826134ca565b9150614626836134ca565b925082820190508082111561463e5761463d6145e1565b5b92915050565b600061464f826134ca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614681576146806145e1565b5b600182019050919050565b82818337600083830152505050565b60006146a783856139b5565b93506146b483858461468c565b6146bd8361364a565b840190509392505050565b60006040820190506146dd60008301866139a6565b81810360208301526146f081848661469b565b9050949350505050565b7f6e6f7420656e6f75676820666f722070726976696c6567650000000000000000600082015250565b60006147306018836139b5565b915061473b826146fa565b602082019050919050565b6000602082019050818103600083015261475f81614723565b9050919050565b6000614771826134ca565b915061477c836134ca565b925082820261478a816134ca565b915082820484148315176147a1576147a06145e1565b5b5092915050565b60006040820190506147bd60008301856139a6565b6147ca60208301846134d4565b9392505050565b6000815190506147e081613bab565b92915050565b6000602082840312156147fc576147fb6134fe565b5b600061480a848285016147d1565b91505092915050565b7f4261642073657474696e67730000000000000000000000000000000000000000600082015250565b6000614849600c836139b5565b915061485482614813565b602082019050919050565b600060208201905081810360008301526148788161483c565b9050919050565b7f53657373696f6e20566f7465206e6f7420636c6f736564000000000000000000600082015250565b60006148b56017836139b5565b91506148c08261487f565b602082019050919050565b600060208201905081810360008301526148e4816148a8565b9050919050565b7f42616420616d6f756e7420666f722070726976696c6567650000000000000000600082015250565b60006149216018836139b5565b915061492c826148eb565b602082019050919050565b6000602082019050818103600083015261495081614914565b9050919050565b7f4261642070726976696c656765206964656e7469666965720000000000000000600082015250565b600061498d6018836139b5565b915061499882614957565b602082019050919050565b600060208201905081810360008301526149bc81614980565b9050919050565b7f566f74696e672073657373696f6e20686176656e74207374617274656420796560008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000614a1f6021836139b5565b9150614a2a826149c3565b604082019050919050565b60006020820190508181036000830152614a4e81614a12565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b6000614a8b6016836139b5565b9150614a9682614a55565b602082019050919050565b60006020820190508181036000830152614aba81614a7e565b9050919050565b7f50726f706f73616c206e6f7420666f756e640000000000000000000000000000600082015250565b6000614af76012836139b5565b9150614b0282614ac1565b602082019050919050565b60006020820190508181036000830152614b2681614aea565b9050919050565b6000606082019050614b4260008301876134d4565b614b4f60208301866139a6565b8181036040830152614b6281848661469b565b905095945050505050565b7f4e6f206361736820696e20536d617274436f6e74726163740000000000000000600082015250565b6000614ba36018836139b5565b9150614bae82614b6d565b602082019050919050565b60006020820190508181036000830152614bd281614b96565b9050919050565b600081905092915050565b50565b6000614bf4600083614bd9565b9150614bff82614be4565b600082019050919050565b6000614c1582614be7565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000614c7b6026836139b5565b9150614c8682614c1f565b604082019050919050565b60006020820190508181036000830152614caa81614c6e565b9050919050565b7f4e6f7420656e6f756768206361736820696e20536d617274436f6e7472616374600082015250565b6000614ce76020836139b5565b9150614cf282614cb1565b602082019050919050565b60006020820190508181036000830152614d1681614cda565b9050919050565b7f4e6f7420636f7272656374207072696365000000000000000000000000000000600082015250565b6000614d536011836139b5565b9150614d5e82614d1d565b602082019050919050565b60006020820190508181036000830152614d8281614d46565b9050919050565b7f4e6f7420656e6f756768742066756e647320746f20627579207468697320707260008201527f6976696c65676500000000000000000000000000000000000000000000000000602082015250565b6000614de56027836139b5565b9150614df082614d89565b604082019050919050565b60006020820190508181036000830152614e1481614dd8565b9050919050565b7f5065746974206d616c696e207661202e2e2e0000000000000000000000000000600082015250565b6000614e516012836139b5565b9150614e5c82614e1b565b602082019050919050565b60006020820190508181036000830152614e8081614e44565b9050919050565b6000606082019050614e9c60008301866139a6565b614ea960208301856139a6565b614eb660408301846134d4565b949350505050565b7f5472616e73666572206572726575720000000000000000000000000000000000600082015250565b6000614ef4600f836139b5565b9150614eff82614ebe565b602082019050919050565b60006020820190508181036000830152614f2381614ee7565b9050919050565b6000606082019050614f3f60008301866139a6565b614f4c60208301856134d4565b614f5960408301846134d4565b949350505050565b7f6e6f7420636f6e6e656374656400000000000000000000000000000000000000600082015250565b6000614f97600d836139b5565b9150614fa282614f61565b602082019050919050565b60006020820190508181036000830152614fc681614f8a565b9050919050565b7f4163636f756e7420616c72656164792045786973740000000000000000000000600082015250565b60006150036015836139b5565b915061500e82614fcd565b602082019050919050565b6000602082019050818103600083015261503281614ff6565b9050919050565b7f56616c7565206e6f7420656d7074790000000000000000000000000000000000600082015250565b600061506f600f836139b5565b915061507a82615039565b602082019050919050565b6000602082019050818103600083015261509e81615062565b9050919050565b600082905092915050565b6150ba83836150a5565b67ffffffffffffffff8111156150d3576150d261433e565b5b6150dd8254614158565b6150e8828285614482565b6000601f8311600181146151175760008415615105578287013590505b61510f85826144f3565b865550615177565b601f1984166151258661436d565b60005b8281101561514d57848901358255600182019150602085019450602081019050615128565b8683101561516a5784890135615166601f8916826144d5565b8355505b6001600288020188555050505b50505050505050565b600060608201905061519560008301886139a6565b81810360208301526151a881868861469b565b905081810360408301526151bd81848661469b565b90509695505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006151ff6020836139b5565b915061520a826151c9565b602082019050919050565b6000602082019050818103600083015261522e816151f2565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061526b601f836139b5565b915061527682615235565b602082019050919050565b6000602082019050818103600083015261529a8161525e565b9050919050565b7f6e6f742076616c6964206163636f756e74000000000000000000000000000000600082015250565b60006152d76011836139b5565b91506152e2826152a1565b602082019050919050565b60006020820190508181036000830152615306816152ca565b9050919050565b7f596f7520617265206e6f74207468652057696e6e65722053657373696f6e207660008201527f6f74650000000000000000000000000000000000000000000000000000000000602082015250565b60006153696023836139b5565b91506153748261530d565b604082019050919050565b600060208201905081810360008301526153988161535c565b905091905056fea264697066735822122045a8945429383ee1e8c5262766c245c1b50ea748f9d058a2e3868532d1d4de1464736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061023f5760003560e01c80638da5cb5b1161012e578063b47e9d40116100ab578063f2fde38b1161006f578063f2fde38b14610800578063f3b3cb6a14610829578063f5ad317514610845578063f7b2a7be1461086e578063ffdf7cb11461089957610246565b8063b47e9d4014610762578063b9e2bea014610779578063c366c56c146107a4578063c6abda3c146107cd578063d4e93292146107f657610246565b8063a87430ba116100f2578063a87430ba14610674578063a8a65a78146106b5578063a96c879e146106de578063aaa9834614610720578063b32c93561461073757610246565b80638da5cb5b1461059f5780638e7ea5b2146105ca5780639867a103146105f55780639b16959514610620578063a730bfaf1461064b57610246565b80633db42de7116101bc578063648213381161018057806364821338146104de578063715018a614610509578063771f7805146105205780637f47997e146105495780638381f58a1461057457610246565b80633db42de71461040b57806342e3cf1e1461043457806358e7a5991461045f57806361bc221a1461048a578063634c2d77146104b557610246565b80632e2dc43e116102035780632e2dc43e1461033157806338f148451461035c5780633a19825d146103855780633cfdf802146103c65780633d665f45146103e257610246565b80630709dec81461024857806314b4a4f9146102735780631dbe22be146102b05780631f21580d146102db5780632d0332841461030657610246565b3661024657005b005b34801561025457600080fd5b5061025d6108c2565b60405161026a91906134e3565b60405180910390f35b34801561027f57600080fd5b5061029a60048036038101906102959190613566565b6108e1565b6040516102a791906135ae565b60405180910390f35b3480156102bc57600080fd5b506102c561093a565b6040516102d291906137be565b60405180910390f35b3480156102e757600080fd5b506102f0610ab0565b6040516102fd91906134e3565b60405180910390f35b34801561031257600080fd5b5061031b610b51565b60405161032891906134e3565b60405180910390f35b34801561033d57600080fd5b50610346610b57565b604051610353919061392b565b60405180910390f35b34801561036857600080fd5b50610383600480360381019061037e9190613979565b610cd7565b005b34801561039157600080fd5b506103ac60048036038101906103a79190613979565b610daa565b6040516103bd9594939291906139ff565b60405180910390f35b6103e060048036038101906103db9190613acc565b610fa8565b005b3480156103ee57600080fd5b5061040960048036038101906104049190613979565b6112b1565b005b34801561041757600080fd5b50610432600480360381019061042d9190613979565b611306565b005b34801561044057600080fd5b506104496113bb565b60405161045691906134e3565b60405180910390f35b34801561046b57600080fd5b50610474611402565b6040516104819190613b90565b60405180910390f35b34801561049657600080fd5b5061049f611415565b6040516104ac91906134e3565b60405180910390f35b3480156104c157600080fd5b506104dc60048036038101906104d79190613979565b61141b565b005b3480156104ea57600080fd5b506104f361142d565b60405161050091906135ae565b60405180910390f35b34801561051557600080fd5b5061051e611484565b005b34801561052c57600080fd5b5061054760048036038101906105429190613bd7565b611498565b005b34801561055557600080fd5b5061055e611525565b60405161056b91906134e3565b60405180910390f35b34801561058057600080fd5b5061058961152b565b60405161059691906134e3565b60405180910390f35b3480156105ab57600080fd5b506105b4611531565b6040516105c19190613c17565b60405180910390f35b3480156105d657600080fd5b506105df61155a565b6040516105ec9190613cb6565b60405180910390f35b34801561060157600080fd5b5061060a611821565b6040516106179190613d37565b60405180910390f35b34801561062c57600080fd5b50610635611845565b60405161064291906134e3565b60405180910390f35b34801561065757600080fd5b50610672600480360381019061066d9190613d52565b61184b565b005b34801561068057600080fd5b5061069b60048036038101906106969190613566565b611908565b6040516106ac959493929190613d92565b60405180910390f35b3480156106c157600080fd5b506106dc60048036038101906106d79190613979565b611a68565b005b3480156106ea57600080fd5b5061070560048036038101906107009190613979565b611a7a565b60405161071796959493929190613df3565b60405180910390f35b34801561072c57600080fd5b50610735611b7b565b005b34801561074357600080fd5b5061074c611cba565b60405161075991906134e3565b60405180910390f35b34801561076e57600080fd5b50610777611d5b565b005b34801561078557600080fd5b5061078e611dec565b60405161079b9190613fa1565b60405180910390f35b3480156107b057600080fd5b506107cb60048036038101906107c69190613fc3565b612061565b005b3480156107d957600080fd5b506107f460048036038101906107ef9190614048565b61233f565b005b6107fe612374565b005b34801561080c57600080fd5b5061082760048036038101906108229190613566565b612438565b005b610843600480360381019061083e9190613bd7565b6124bb565b005b34801561085157600080fd5b5061086c60048036038101906108679190613d52565b61264d565b005b34801561087a57600080fd5b50610883612ae0565b60405161089091906134e3565b60405180910390f35b3480156108a557600080fd5b506108c060048036038101906108bb9190614075565b612ae6565b005b60003373ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160019054906101000a900460ff169050919050565b6060600a805480602002602001604051908101604052809291908181526020016000905b82821015610aa757838290600052602060002090600402016040518060a001604052908160008201548152602001600182015481526020016002820180546109a590614158565b80601f01602080910402602001604051908101604052809291908181526020018280546109d190614158565b8015610a1e5780601f106109f357610100808354040283529160200191610a1e565b820191906000526020600020905b815481529060010190602001808311610a0157829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff1615151515815250508152602001906001019061095e565b50505050905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b0b9190613c17565b602060405180830381865afa158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c919061419e565b905090565b60055481565b6060600c805480602002602001604051908101604052809291908181526020016000905b82821015610cce57838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054610c0e90614158565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3a90614158565b8015610c875780601f10610c5c57610100808354040283529160200191610c87565b820191906000526020600020905b815481529060010190602001808311610c6a57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505081526020019060010190610b7b565b50505050905090565b610cdf612fde565b6000811015610d23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1a90614217565b60405180910390fd5b600b8181548110610d3757610d36614237565b5b9060005260206000209060050201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000610d7d9190613393565b600282016000610d8d9190613393565b600382016000610d9d9190613393565b6004820160009055505050565b600b8181548110610dba57600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610e0390614158565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2f90614158565b8015610e7c5780601f10610e5157610100808354040283529160200191610e7c565b820191906000526020600020905b815481529060010190602001808311610e5f57829003601f168201915b505050505090806002018054610e9190614158565b80601f0160208091040260200160405190810160405280929190818152602001828054610ebd90614158565b8015610f0a5780601f10610edf57610100808354040283529160200191610f0a565b820191906000526020600020905b815481529060010190602001808311610eed57829003601f168201915b505050505090806003018054610f1f90614158565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4b90614158565b8015610f985780601f10610f6d57610100808354040283529160200191610f98565b820191906000526020600020905b815481529060010190602001808311610f7b57829003601f168201915b5050505050908060040154905085565b610fb061305c565b60011515600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160019054906101000a900460ff16151514611046576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103d906142b2565b60405180910390fd5b600554341461108a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110819061431e565b60405180910390fd5b6110926133d3565b6003548160000181815250503481602001818152505082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525033816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001816080019015159081151581525050600a81908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101556040820151816002019081611193919061450f565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff021916908315150217905550505034600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461124c9190614610565b9250508190555060036000815461126290614644565b919050819055507f79b4967f952c2e2a563ed6ece6722a54e83844ba5ab08f9f5cdaaf27560125de33848460405161129c939291906146c8565b60405180910390a1506112ad6130ab565b5050565b6112b9612fde565b600081116112fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f390614746565b60405180910390fd5b8060058190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b333670de0b6b3a7640000846113579190614766565b6040518363ffffffff1660e01b81526004016113749291906147a8565b6020604051808303816000875af1158015611393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b791906147e6565b5050565b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600260009054906101000a900460ff1681565b60035481565b611423612fde565b8060068190555050565b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16905090565b61148c612fde565b61149660006130b4565b565b6114a0612fde565b60008210156114e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114db9061485f565b60405180910390fd5b80600c83815481106114f9576114f8614237565b5b906000526020600020906006020160050160006101000a81548160ff0219169083151502179055505050565b60075481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61156261341a565b60038081111561157557611574613b19565b5b600260009054906101000a900460ff16600381111561159757611596613b19565b5b146115d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ce906148cb565b60405180910390fd5b600b600854815481106115ed576115ec614237565b5b90600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461166c90614158565b80601f016020809104026020016040519081016040528092919081815260200182805461169890614158565b80156116e55780601f106116ba576101008083540402835291602001916116e5565b820191906000526020600020905b8154815290600101906020018083116116c857829003601f168201915b505050505081526020016002820180546116fe90614158565b80601f016020809104026020016040519081016040528092919081815260200182805461172a90614158565b80156117775780601f1061174c57610100808354040283529160200191611777565b820191906000526020600020905b81548152906001019060200180831161175a57829003601f168201915b5050505050815260200160038201805461179090614158565b80601f01602080910402602001604051908101604052809291908181526020018280546117bc90614158565b80156118095780601f106117de57610100808354040283529160200191611809565b820191906000526020600020905b8154815290600101906020018083116117ec57829003601f168201915b50505050508152602001600482015481525050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b611853612fde565b60008111611896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188d90614937565b60405180910390fd5b60008210156118da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d1906149a3565b60405180910390fd5b80600a83815481106118ef576118ee614237565b5b9060005260206000209060040201600101819055505050565b600d60205280600052604060002060009150905080600001805461192b90614158565b80601f016020809104026020016040519081016040528092919081815260200182805461195790614158565b80156119a45780601f10611979576101008083540402835291602001916119a4565b820191906000526020600020905b81548152906001019060200180831161198757829003601f168201915b5050505050908060010180546119b990614158565b80601f01602080910402602001604051908101604052809291908181526020018280546119e590614158565b8015611a325780601f10611a0757610100808354040283529160200191611a32565b820191906000526020600020905b815481529060010190602001808311611a1557829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b611a70612fde565b8060098190555050565b600c8181548110611a8a57600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054611ad990614158565b80601f0160208091040260200160405190810160405280929190818152602001828054611b0590614158565b8015611b525780601f10611b2757610100808354040283529160200191611b52565b820191906000526020600020905b815481529060010190602001808311611b3557829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16905086565b611b83612fde565b6000600481905550600760008154611b9a90614644565b9190508190555060028060006101000a81548160ff02191690836003811115611bc657611bc5613b19565b5b021790555060005b600b80549050811015611cb7576000600b8281548110611bf157611bf0614237565b5b9060005260206000209060050201600401819055506000600d6000600b8481548110611c2057611c1f614237565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff02191690831515021790555080611cb090614644565b9050611bce565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d159190613c17565b602060405180830381865afa158015611d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d56919061419e565b905090565b611d63612fde565b6003600260006101000a81548160ff02191690836003811115611d8957611d88613b19565b5b021790555060065460045410611dea57611de9600b60085481548110611db257611db1614237565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613178565b5b565b6060600b805480602002602001604051908101604052809291908181526020016000905b8282101561205857838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054611e9990614158565b80601f0160208091040260200160405190810160405280929190818152602001828054611ec590614158565b8015611f125780601f10611ee757610100808354040283529160200191611f12565b820191906000526020600020905b815481529060010190602001808311611ef557829003601f168201915b50505050508152602001600282018054611f2b90614158565b80601f0160208091040260200160405190810160405280929190818152602001828054611f5790614158565b8015611fa45780601f10611f7957610100808354040283529160200191611fa4565b820191906000526020600020905b815481529060010190602001808311611f8757829003601f168201915b50505050508152602001600382018054611fbd90614158565b80601f0160208091040260200160405190810160405280929190818152602001828054611fe990614158565b80156120365780601f1061200b57610100808354040283529160200191612036565b820191906000526020600020905b81548152906001019060200180831161201957829003601f168201915b5050505050815260200160048201548152505081526020019060010190611e10565b50505050905090565b6002600381111561207557612074613b19565b5b600260009054906101000a900460ff16600381111561209757612096613b19565b5b146120d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ce90614a35565b60405180910390fd5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615612167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215e90614aa1565b60405180910390fd5b600b8054905083106121ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121a590614b0d565b60405180910390fd5b6001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908315150217905550600b838154811061221d5761221c614237565b5b9060005260206000209060050201600401600081548092919061223f90614644565b9190505550600b6008548154811061225a57612259614237565b5b906000526020600020906005020160040154600b84815481106122805761227f614237565b5b90600052602060002090600502016004015411156122a057826008819055505b6004600081546122af90614644565b919050819055507f9a4b1974a303b6b8937c2f2186a95dc8466a1b5f12f3908d04c7e4afc0079bd9600754600b85815481106122ee576122ed614237565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684846040516123329493929190614b2d565b60405180910390a1505050565b612347612fde565b80600260006101000a81548160ff0219169083600381111561236c5761236b613b19565b5b021790555050565b61237c612fde565b600047116123bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123b690614bb9565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516123e590614c0a565b60006040518083038185875af1925050503d8060008114612422576040519150601f19603f3d011682016040523d82523d6000602084013e612427565b606091505b505090508061243557600080fd5b50565b612440612fde565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036124af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124a690614c91565b60405180910390fd5b6124b8816130b4565b50565b6124c3612fde565b80600a83815481106124d8576124d7614237565b5b906000526020600020906004020160030160146101000a81548160ff021916908315150217905550600a828154811061251457612513614237565b5b906000526020600020906004020160010154471015612568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255f90614cfd565b60405180910390fd5b6000600a838154811061257e5761257d614237565b5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600a84815481106125da576125d9614237565b5b9060005260206000209060040201600101546040516125f890614c0a565b60006040518083038185875af1925050503d8060008114612635576040519150601f19603f3d011682016040523d82523d6000602084013e61263a565b606091505b505090508061264857600080fd5b505050565b60008111612690576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161268790614d69565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016126ea9190613c17565b602060405180830381865afa158015612707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061272b919061419e565b101561276c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276390614dfb565b60405180910390fd5b80600a838154811061278157612780614237565b5b906000526020600020906004020160010154146127d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ca90614e67565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161283093929190614e87565b6020604051808303816000875af115801561284f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061287391906147e6565b6128b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128a990614f0a565b60405180910390fd5b6128ba61345f565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082816020018181525050600a83815481106129105761290f614237565b5b9060005260206000209060040201600201805461292c90614158565b80601f016020809104026020016040519081016040528092919081815260200182805461295890614158565b80156129a55780601f1061297a576101008083540402835291602001916129a5565b820191906000526020600020905b81548152906001019060200180831161298857829003601f168201915b50505050508160400181905250428160600181815250508181608001818152505060008160a0019015159081151581525050600c81908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081612a69919061450f565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555050507ff6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb338385604051612ad393929190614f2a565b60405180910390a1505050565b60095481565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603612b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4c90614fad565b60405180910390fd5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160019054906101000a900460ff1615612be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bdc90615019565b60405180910390fd5b600086869050118015612bfb5750600084849050115b8015612c0a5750600082829050115b612c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c4090615085565b60405180910390fd5b8585600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019182612c9a9291906150b0565b508383600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019182612cec9291906150b0565b506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160016101000a81548160ff021916908315150217905550612dab61341a565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816020018190525084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081606001819052506000816080018181525050600b81908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081612f5d919061450f565b506040820151816002019081612f73919061450f565b506060820151816003019081612f89919061450f565b506080820151816004015550507fdb662c8b79ccb9909891c358aec9651e782d0ad9523566bd659c084b5fefcec73388888888604051612fcd959493929190615180565b60405180910390a150505050505050565b612fe661338b565b73ffffffffffffffffffffffffffffffffffffffff16613004611531565b73ffffffffffffffffffffffffffffffffffffffff161461305a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161305190615215565b60405180910390fd5b565b6002600154036130a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161309890615281565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61318061305c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036131ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131e6906152ed565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b6008548154811061321c5761321b614237565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146132a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161329b9061537f565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb826009546040518363ffffffff1660e01b81526004016133019291906147a8565b6020604051808303816000875af1158015613320573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061334491906147e6565b507f2e06e81581e774f145d32b1feac204fb2683499d425091cb4fcfc137726008c2816009546040516133789291906147a8565b60405180910390a16133886130ab565b50565b600033905090565b50805461339f90614158565b6000825580601f106133b157506133d0565b601f0160209004906000526020600020908101906133cf91906134ad565b5b50565b6040518060a00160405280600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001600081525090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160008152602001600081526020016000151581525090565b5b808211156134c65760008160009055506001016134ae565b5090565b6000819050919050565b6134dd816134ca565b82525050565b60006020820190506134f860008301846134d4565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061353382613508565b9050919050565b61354381613528565b811461354e57600080fd5b50565b6000813590506135608161353a565b92915050565b60006020828403121561357c5761357b6134fe565b5b600061358a84828501613551565b91505092915050565b60008115159050919050565b6135a881613593565b82525050565b60006020820190506135c3600083018461359f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6135fe816134ca565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561363e578082015181840152602081019050613623565b60008484015250505050565b6000601f19601f8301169050919050565b600061366682613604565b613670818561360f565b9350613680818560208601613620565b6136898161364a565b840191505092915050565b61369d81613528565b82525050565b6136ac81613593565b82525050565b600060a0830160008301516136ca60008601826135f5565b5060208301516136dd60208601826135f5565b50604083015184820360408601526136f5828261365b565b915050606083015161370a6060860182613694565b50608083015161371d60808601826136a3565b508091505092915050565b600061373483836136b2565b905092915050565b6000602082019050919050565b6000613754826135c9565b61375e81856135d4565b935083602082028501613770856135e5565b8060005b858110156137ac578484038952815161378d8582613728565b94506137988361373c565b925060208a01995050600181019050613774565b50829750879550505050505092915050565b600060208201905081810360008301526137d88184613749565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060c0830160008301516138246000860182613694565b50602083015161383760208601826135f5565b506040830151848203604086015261384f828261365b565b915050606083015161386460608601826135f5565b50608083015161387760808601826135f5565b5060a083015161388a60a08601826136a3565b508091505092915050565b60006138a1838361380c565b905092915050565b6000602082019050919050565b60006138c1826137e0565b6138cb81856137eb565b9350836020820285016138dd856137fc565b8060005b8581101561391957848403895281516138fa8582613895565b9450613905836138a9565b925060208a019950506001810190506138e1565b50829750879550505050505092915050565b6000602082019050818103600083015261394581846138b6565b905092915050565b613956816134ca565b811461396157600080fd5b50565b6000813590506139738161394d565b92915050565b60006020828403121561398f5761398e6134fe565b5b600061399d84828501613964565b91505092915050565b6139af81613528565b82525050565b600082825260208201905092915050565b60006139d182613604565b6139db81856139b5565b93506139eb818560208601613620565b6139f48161364a565b840191505092915050565b600060a082019050613a1460008301886139a6565b8181036020830152613a2681876139c6565b90508181036040830152613a3a81866139c6565b90508181036060830152613a4e81856139c6565b9050613a5d60808301846134d4565b9695505050505050565b600080fd5b600080fd5b600080fd5b60008083601f840112613a8c57613a8b613a67565b5b8235905067ffffffffffffffff811115613aa957613aa8613a6c565b5b602083019150836001820283011115613ac557613ac4613a71565b5b9250929050565b60008060208385031215613ae357613ae26134fe565b5b600083013567ffffffffffffffff811115613b0157613b00613503565b5b613b0d85828601613a76565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110613b5957613b58613b19565b5b50565b6000819050613b6a82613b48565b919050565b6000613b7a82613b5c565b9050919050565b613b8a81613b6f565b82525050565b6000602082019050613ba56000830184613b81565b92915050565b613bb481613593565b8114613bbf57600080fd5b50565b600081359050613bd181613bab565b92915050565b60008060408385031215613bee57613bed6134fe565b5b6000613bfc85828601613964565b9250506020613c0d85828601613bc2565b9150509250929050565b6000602082019050613c2c60008301846139a6565b92915050565b600060a083016000830151613c4a6000860182613694565b5060208301518482036020860152613c62828261365b565b91505060408301518482036040860152613c7c828261365b565b91505060608301518482036060860152613c96828261365b565b9150506080830151613cab60808601826135f5565b508091505092915050565b60006020820190508181036000830152613cd08184613c32565b905092915050565b6000819050919050565b6000613cfd613cf8613cf384613508565b613cd8565b613508565b9050919050565b6000613d0f82613ce2565b9050919050565b6000613d2182613d04565b9050919050565b613d3181613d16565b82525050565b6000602082019050613d4c6000830184613d28565b92915050565b60008060408385031215613d6957613d686134fe565b5b6000613d7785828601613964565b9250506020613d8885828601613964565b9150509250929050565b600060a0820190508181036000830152613dac81886139c6565b90508181036020830152613dc081876139c6565b9050613dcf60408301866134d4565b613ddc606083018561359f565b613de9608083018461359f565b9695505050505050565b600060c082019050613e0860008301896139a6565b613e1560208301886134d4565b8181036040830152613e2781876139c6565b9050613e3660608301866134d4565b613e4360808301856134d4565b613e5060a083018461359f565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060a083016000830151613e9f6000860182613694565b5060208301518482036020860152613eb7828261365b565b91505060408301518482036040860152613ed1828261365b565b91505060608301518482036060860152613eeb828261365b565b9150506080830151613f0060808601826135f5565b508091505092915050565b6000613f178383613e87565b905092915050565b6000602082019050919050565b6000613f3782613e5b565b613f418185613e66565b935083602082028501613f5385613e77565b8060005b85811015613f8f5784840389528151613f708582613f0b565b9450613f7b83613f1f565b925060208a01995050600181019050613f57565b50829750879550505050505092915050565b60006020820190508181036000830152613fbb8184613f2c565b905092915050565b600080600060408486031215613fdc57613fdb6134fe565b5b6000613fea86828701613964565b935050602084013567ffffffffffffffff81111561400b5761400a613503565b5b61401786828701613a76565b92509250509250925092565b6004811061403057600080fd5b50565b60008135905061404281614023565b92915050565b60006020828403121561405e5761405d6134fe565b5b600061406c84828501614033565b91505092915050565b60008060008060008060608789031215614092576140916134fe565b5b600087013567ffffffffffffffff8111156140b0576140af613503565b5b6140bc89828a01613a76565b9650965050602087013567ffffffffffffffff8111156140df576140de613503565b5b6140eb89828a01613a76565b9450945050604087013567ffffffffffffffff81111561410e5761410d613503565b5b61411a89828a01613a76565b92509250509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061417057607f821691505b60208210810361418357614182614129565b5b50919050565b6000815190506141988161394d565b92915050565b6000602082840312156141b4576141b36134fe565b5b60006141c284828501614189565b91505092915050565b7f6261642062756d62657200000000000000000000000000000000000000000000600082015250565b6000614201600a836139b5565b915061420c826141cb565b602082019050919050565b60006020820190508181036000830152614230816141f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f55736572206e6f74207265636f72646564000000000000000000000000000000600082015250565b600061429c6011836139b5565b91506142a782614266565b602082019050919050565b600060208201905081810360008301526142cb8161428f565b9050919050565b7f496e636f727265637420616d6f756e7400000000000000000000000000000000600082015250565b60006143086010836139b5565b9150614313826142d2565b602082019050919050565b60006020820190508181036000830152614337816142fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026143cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614392565b6143d98683614392565b95508019841693508086168417925050509392505050565b600061440c614407614402846134ca565b613cd8565b6134ca565b9050919050565b6000819050919050565b614426836143f1565b61443a61443282614413565b84845461439f565b825550505050565b600090565b61444f614442565b61445a81848461441d565b505050565b5b8181101561447e57614473600082614447565b600181019050614460565b5050565b601f8211156144c3576144948161436d565b61449d84614382565b810160208510156144ac578190505b6144c06144b885614382565b83018261445f565b50505b505050565b600082821c905092915050565b60006144e6600019846008026144c8565b1980831691505092915050565b60006144ff83836144d5565b9150826002028217905092915050565b61451882613604565b67ffffffffffffffff8111156145315761453061433e565b5b61453b8254614158565b614546828285614482565b600060209050601f8311600181146145795760008415614567578287015190505b61457185826144f3565b8655506145d9565b601f1984166145878661436d565b60005b828110156145af5784890151825560018201915060208501945060208101905061458a565b868310156145cc57848901516145c8601f8916826144d5565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061461b826134ca565b9150614626836134ca565b925082820190508082111561463e5761463d6145e1565b5b92915050565b600061464f826134ca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614681576146806145e1565b5b600182019050919050565b82818337600083830152505050565b60006146a783856139b5565b93506146b483858461468c565b6146bd8361364a565b840190509392505050565b60006040820190506146dd60008301866139a6565b81810360208301526146f081848661469b565b9050949350505050565b7f6e6f7420656e6f75676820666f722070726976696c6567650000000000000000600082015250565b60006147306018836139b5565b915061473b826146fa565b602082019050919050565b6000602082019050818103600083015261475f81614723565b9050919050565b6000614771826134ca565b915061477c836134ca565b925082820261478a816134ca565b915082820484148315176147a1576147a06145e1565b5b5092915050565b60006040820190506147bd60008301856139a6565b6147ca60208301846134d4565b9392505050565b6000815190506147e081613bab565b92915050565b6000602082840312156147fc576147fb6134fe565b5b600061480a848285016147d1565b91505092915050565b7f4261642073657474696e67730000000000000000000000000000000000000000600082015250565b6000614849600c836139b5565b915061485482614813565b602082019050919050565b600060208201905081810360008301526148788161483c565b9050919050565b7f53657373696f6e20566f7465206e6f7420636c6f736564000000000000000000600082015250565b60006148b56017836139b5565b91506148c08261487f565b602082019050919050565b600060208201905081810360008301526148e4816148a8565b9050919050565b7f42616420616d6f756e7420666f722070726976696c6567650000000000000000600082015250565b60006149216018836139b5565b915061492c826148eb565b602082019050919050565b6000602082019050818103600083015261495081614914565b9050919050565b7f4261642070726976696c656765206964656e7469666965720000000000000000600082015250565b600061498d6018836139b5565b915061499882614957565b602082019050919050565b600060208201905081810360008301526149bc81614980565b9050919050565b7f566f74696e672073657373696f6e20686176656e74207374617274656420796560008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000614a1f6021836139b5565b9150614a2a826149c3565b604082019050919050565b60006020820190508181036000830152614a4e81614a12565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b6000614a8b6016836139b5565b9150614a9682614a55565b602082019050919050565b60006020820190508181036000830152614aba81614a7e565b9050919050565b7f50726f706f73616c206e6f7420666f756e640000000000000000000000000000600082015250565b6000614af76012836139b5565b9150614b0282614ac1565b602082019050919050565b60006020820190508181036000830152614b2681614aea565b9050919050565b6000606082019050614b4260008301876134d4565b614b4f60208301866139a6565b8181036040830152614b6281848661469b565b905095945050505050565b7f4e6f206361736820696e20536d617274436f6e74726163740000000000000000600082015250565b6000614ba36018836139b5565b9150614bae82614b6d565b602082019050919050565b60006020820190508181036000830152614bd281614b96565b9050919050565b600081905092915050565b50565b6000614bf4600083614bd9565b9150614bff82614be4565b600082019050919050565b6000614c1582614be7565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000614c7b6026836139b5565b9150614c8682614c1f565b604082019050919050565b60006020820190508181036000830152614caa81614c6e565b9050919050565b7f4e6f7420656e6f756768206361736820696e20536d617274436f6e7472616374600082015250565b6000614ce76020836139b5565b9150614cf282614cb1565b602082019050919050565b60006020820190508181036000830152614d1681614cda565b9050919050565b7f4e6f7420636f7272656374207072696365000000000000000000000000000000600082015250565b6000614d536011836139b5565b9150614d5e82614d1d565b602082019050919050565b60006020820190508181036000830152614d8281614d46565b9050919050565b7f4e6f7420656e6f756768742066756e647320746f20627579207468697320707260008201527f6976696c65676500000000000000000000000000000000000000000000000000602082015250565b6000614de56027836139b5565b9150614df082614d89565b604082019050919050565b60006020820190508181036000830152614e1481614dd8565b9050919050565b7f5065746974206d616c696e207661202e2e2e0000000000000000000000000000600082015250565b6000614e516012836139b5565b9150614e5c82614e1b565b602082019050919050565b60006020820190508181036000830152614e8081614e44565b9050919050565b6000606082019050614e9c60008301866139a6565b614ea960208301856139a6565b614eb660408301846134d4565b949350505050565b7f5472616e73666572206572726575720000000000000000000000000000000000600082015250565b6000614ef4600f836139b5565b9150614eff82614ebe565b602082019050919050565b60006020820190508181036000830152614f2381614ee7565b9050919050565b6000606082019050614f3f60008301866139a6565b614f4c60208301856134d4565b614f5960408301846134d4565b949350505050565b7f6e6f7420636f6e6e656374656400000000000000000000000000000000000000600082015250565b6000614f97600d836139b5565b9150614fa282614f61565b602082019050919050565b60006020820190508181036000830152614fc681614f8a565b9050919050565b7f4163636f756e7420616c72656164792045786973740000000000000000000000600082015250565b60006150036015836139b5565b915061500e82614fcd565b602082019050919050565b6000602082019050818103600083015261503281614ff6565b9050919050565b7f56616c7565206e6f7420656d7074790000000000000000000000000000000000600082015250565b600061506f600f836139b5565b915061507a82615039565b602082019050919050565b6000602082019050818103600083015261509e81615062565b9050919050565b600082905092915050565b6150ba83836150a5565b67ffffffffffffffff8111156150d3576150d261433e565b5b6150dd8254614158565b6150e8828285614482565b6000601f8311600181146151175760008415615105578287013590505b61510f85826144f3565b865550615177565b601f1984166151258661436d565b60005b8281101561514d57848901358255600182019150602085019450602081019050615128565b8683101561516a5784890135615166601f8916826144d5565b8355505b6001600288020188555050505b50505050505050565b600060608201905061519560008301886139a6565b81810360208301526151a881868861469b565b905081810360408301526151bd81848661469b565b90509695505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006151ff6020836139b5565b915061520a826151c9565b602082019050919050565b6000602082019050818103600083015261522e816151f2565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061526b601f836139b5565b915061527682615235565b602082019050919050565b6000602082019050818103600083015261529a8161525e565b9050919050565b7f6e6f742076616c6964206163636f756e74000000000000000000000000000000600082015250565b60006152d76011836139b5565b91506152e2826152a1565b602082019050919050565b60006020820190508181036000830152615306816152ca565b9050919050565b7f596f7520617265206e6f74207468652057696e6e65722053657373696f6e207660008201527f6f74650000000000000000000000000000000000000000000000000000000000602082015250565b60006153696023836139b5565b91506153748261530d565b604082019050919050565b600060208201905081810360008301526153988161535c565b905091905056fea264697066735822122045a8945429383ee1e8c5262766c245c1b50ea748f9d058a2e3868532d1d4de1464736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addPrivilegePrice(uint256,uint256)": {
        "details": "send Token to winner"
      },
      "moderatePrivilege(uint256,bool)": {
        "details": "if remove list privilege, refund user"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "stopVoteSession()": {
        "details": "Reinit du compteur de vote en cours pour la session (number)MinimumVote to send token at vote session stop"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addPrivilegePrice(uint256,uint256)": {
        "notice": "Display the winner and clean data for next session"
      },
      "isAccountExist(address)": {
        "notice": "Check if user is recorded on chain / Address and Proposal "
      },
      "setProfilAndProposal(string,string,string)": {
        "notice": "Record profil user and record proposaleach users can be proposal"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 297,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "workflowstatus",
        "offset": 0,
        "slot": "2",
        "type": "t_enum(WorkflowStatus)294"
      },
      {
        "astId": 299,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "counter",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 302,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "number",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 305,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "amountpriv",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 308,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "minimumVote",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 310,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "votingSessionNumber",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 312,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "winningProposalID",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 315,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "rewardAmount",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 330,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "privilegeArray",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_struct(Privilege)326_storage)dyn_storage"
      },
      {
        "astId": 345,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "proposalArray",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_struct(Proposal)341_storage)dyn_storage"
      },
      {
        "astId": 373,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "ordersArray",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_struct(Orders)369_storage)dyn_storage"
      },
      {
        "astId": 378,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "users",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_struct(Profil)356_storage)"
      },
      {
        "astId": 382,
        "contract": "contracts/Arpa3.sol:Arpa3",
        "label": "balances",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Orders)369_storage)dyn_storage": {
        "base": "t_struct(Orders)369_storage",
        "encoding": "dynamic_array",
        "label": "struct Arpa3.Orders[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Privilege)326_storage)dyn_storage": {
        "base": "t_struct(Privilege)326_storage",
        "encoding": "dynamic_array",
        "label": "struct Arpa3.Privilege[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Proposal)341_storage)dyn_storage": {
        "base": "t_struct(Proposal)341_storage",
        "encoding": "dynamic_array",
        "label": "struct Arpa3.Proposal[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(WorkflowStatus)294": {
        "encoding": "inplace",
        "label": "enum Arpa3.WorkflowStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Profil)356_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Arpa3.Profil)",
        "numberOfBytes": "32",
        "value": "t_struct(Profil)356_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Orders)369_storage": {
        "encoding": "inplace",
        "label": "struct Arpa3.Orders",
        "members": [
          {
            "astId": 358,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "winnerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 360,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "privilegeID",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 362,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "descprivi",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 364,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "timestamprivi",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 366,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "amountprivi",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 368,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "consoprivi",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Privilege)326_storage": {
        "encoding": "inplace",
        "label": "struct Arpa3.Privilege",
        "members": [
          {
            "astId": 317,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "idP",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 319,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 321,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 323,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "addressuser",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 325,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "isActive",
            "offset": 20,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Profil)356_storage": {
        "encoding": "inplace",
        "label": "struct Arpa3.Profil",
        "members": [
          {
            "astId": 347,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 349,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "firstname",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 351,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "nbVotePrivilege",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 353,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "hasvoted",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 355,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "active",
            "offset": 1,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Proposal)341_storage": {
        "encoding": "inplace",
        "label": "struct Arpa3.Proposal",
        "members": [
          {
            "astId": 332,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "addresse",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 334,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 336,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "firstname",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 338,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "service",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 340,
            "contract": "contracts/Arpa3.sol:Arpa3",
            "label": "nbvote",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}